/* ****************************************************************************************************
IusCL - http://iuscl.org
 
This software is distributed under the terms of: 
Eclipse Public License v1.0 - http://www.eclipse.org/org/documents/epl-v10.html
**************************************************************************************************** */

begin IusCLNotifyEvent
	/** ${component}.${event} event implementation */
	public void ${implementation}(IusCLObject sender) {

		${caret}
	}
end IusCLNotifyEvent

/* **************************************************************************************************** */

begin IusCLMouseEvent
	/** ${component}.${event} event implementation */
	public void ${implementation}(IusCLObject sender, 
		IusCLMouseButton button, EnumSet<IusCLShiftState> shift, Integer x, Integer y) {

		${caret}
	}
end IusCLMouseEvent

/* **************************************************************************************************** */

begin IusCLMouseMoveEvent
	/** ${component}.${event} event implementation */
	public void ${implementation}(IusCLObject sender, 
		EnumSet<IusCLShiftState> shift, Integer x, Integer y) {

		${caret}
	}
end IusCLMouseMoveEvent

/* **************************************************************************************************** */

begin IusCLMouseHoverEvent
	/** ${component}.${event} event implementation */
	public void ${implementation}(IusCLObject sender, Integer x, Integer y) {

		${caret}
	}
end IusCLMouseHoverEvent

/* **************************************************************************************************** */

begin IusCLMouseWheelEvent
	/** ${component}.${event} event implementation */
	public Boolean ${implementation}(IusCLObject sender, 
		EnumSet<IusCLShiftState> shift, Integer wheelDelta, Integer x, Integer y) {

		${caret}
		return true;
	}
end IusCLMouseWheelEvent

/* **************************************************************************************************** */

begin IusCLMouseWheelUpDownEvent
	/** ${component}.${event} event implementation */
	public Boolean ${implementation}(IusCLObject sender, 
		EnumSet<IusCLShiftState> shift, Integer x, Integer y) {

		${caret}
		return true;
	}
end IusCLMouseWheelUpDownEvent

/* **************************************************************************************************** */

begin IusCLKeyPressEvent
	/** ${component}.${event} event implementation */
	public void ${implementation}(IusCLObject sender, Character keyChar) {

		${caret}
	}
end IusCLKeyPressEvent

/* **************************************************************************************************** */

begin IusCLKeyEvent
	/** ${component}.${event} event implementation */
	public void ${implementation}(IusCLObject sender,
		IusCLKeyboardKey key, EnumSet<IusCLShiftState> shift) {

		${caret}
	}
end IusCLKeyEvent

/* **************************************************************************************************** */

begin IusCLContextPopupEvent
	/** ${component}.${event} event implementation */
	public Boolean ${implementation}(IusCLObject sender, Integer x, Integer y) {

		${caret}
		return true;
	}
end IusCLContextPopupEvent

/* **************************************************************************************************** */

begin IusCLCloseQueryEvent
	/** ${component}.${event} event implementation */
	public Boolean ${implementation}(IusCLObject sender) {

		${caret}
		return true;
	}
end IusCLCloseQueryEvent

/* **************************************************************************************************** */

begin IusCLCloseEvent
	/** ${component}.${event} event implementation */
	public IusCLCloseAction ${implementation}(IusCLObject sender) {

		${caret}
		return IusCLCloseAction.caHide;
	}
end IusCLCloseEvent


/* **************************************************************************************************** */

begin IusCLCanResizeEvent
	/** ${component}.${event} event implementation */
	public Boolean ${implementation}(IusCLObject sender, IusCLSize newSize) {

		${caret}
		return true;
	}
end IusCLCanResizeEvent

/* **************************************************************************************************** */

begin IusCLConstrainedResizeEvent
	/** ${component}.${event} event implementation */
	public void ${implementation}(IusCLObject sender, IusCLSizeConstraints newSizeConstraints) {

		${caret}
	}
end IusCLConstrainedResizeEvent

/* **************************************************************************************************** */

begin IusCLScrollEvent
	/** ${component}.${event} event implementation */
	public Integer ${implementation}(IusCLObject sender, IusCLScrollCode scrollCode, Integer scrollPos) {

		${caret}
		return scrollPos;
	}
end IusCLScrollEvent

/* **************************************************************************************************** */

begin IusCLTreeViewExpandedEvent
	/** ${component}.${event} event implementation */
	public void ${implementation}(IusCLObject sender, IusCLTreeNode treeNode) {

		${caret}
	}
end IusCLTreeViewExpandedEvent

/* **************************************************************************************************** */

begin IusCLTreeViewCollapsedEvent
	/** ${component}.${event} event implementation */
	public void ${implementation}(IusCLObject sender, IusCLTreeNode treeNode) {

		${caret}
	}
end IusCLTreeViewCollapsedEvent

/* **************************************************************************************************** */

begin IusCLMessageEvent
	/** ${component}.${event} event implementation */
	public Boolean ${implementation}(IusCLObject sender, Object msg) {

		${caret}
		return false;
	}
end IusCLMessageEvent

/* **************************************************************************************************** */
